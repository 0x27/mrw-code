[{"type":"tab","id":"5d7c6aac.810264","label":"Serial to MQTT & DB"},{"type":"tab","id":"7a69b8ae.02f248","label":"Alerts from house"},{"type":"tab","id":"bef50b75.d162a","label":"Switch off appliances"},{"type":"tab","id":"b06c02e6.4f94","label":"System Tasks"},{"id":"3d5e337a.5a9084","type":"MySQLdatabase","host":"127.0.0.1","port":"3306","db":"mydata","tz":""},{"id":"6ae3bdcd.ab16bc","type":"mqtt-broker","broker":"localhost","port":"1883","clientid":""},{"id":"8019c7f2.618c78","type":"serial-port","serialport":"/dev/ttyUSBRFM","serialbaud":"57600","databits":"8","parity":"none","stopbits":"1","newline":"\\n","bin":null,"out":"char","addchar":true},{"id":"fc5973ef.a12d38","type":"serial-port","serialport":"/dev/ttyUSBCC","serialbaud":"57600","databits":8,"parity":"none","stopbits":1,"newline":"\\r","addchar":"false"},{"id":"535379e2.02fdc8","type":"mqtt-broker","broker":"realtime.ngi.ibm.com","port":"1883","clientid":""},{"id":"d3cf0ed9.38a9c8","type":"serial-port","serialport":"/dev/ttyUSBGAS","serialbaud":"9600","databits":"8","parity":"none","stopbits":"1","newline":"\\n","bin":"false","out":"char","addchar":true},{"id":"72bd61c1.c2afa","type":"mysql","mydb":"3d5e337a.5a9084","name":"mydata","x":582,"y":405,"z":"5d7c6aac.810264","wires":[["7bb0e53a.9510ec"]]},{"id":"9202d80a.014398","type":"serial in","name":"RFMHubReceiver","serial":"8019c7f2.618c78","x":131,"y":108,"z":"5d7c6aac.810264","wires":[["a7b33488.d54ad","4f75be59.8cfa6","ba4e8d62.0a2bc"]]},{"id":"a7b33488.d54ad","type":"function","name":"ParseInfoMessages","func":"if (msg.payload.indexOf(\"INFO\") >= 0) {\n\tmsg.payload = \"NR: \" + msg.payload;\n} else {\n\tmsg = null;\n}\n\nreturn msg;","outputs":1,"valid":true,"x":363,"y":118,"z":"5d7c6aac.810264","wires":[["69a25cdd.0c093c"]]},{"id":"69a25cdd.0c093c","type":"debug","name":"","active":false,"console":"false","complete":"false","x":550,"y":118,"z":"5d7c6aac.810264","wires":[]},{"id":"4f75be59.8cfa6","type":"function","name":"ParseDataMessages","func":"context.msgIDs = typeof context.msgIDs === 'undefined' ? [] : context.msgIDs;\n\nvar messages = [];\n\n// Each RFM message contains a message counter 0-9 so we\n// can discount messages that a sensor has resent because it \n// didn't get an ACK. We need to store the latest counter for\n// each sensor and then ignore duplicates\n\n// Determine which wireless node is publishing - each one publishes slightly different\n// data so this allows us to process each one individually\nif (msg.payload.indexOf(\"DATA\") >= 0) {\n    var wirelessNodeNumber = \"\" + msg.payload.substring(msg.payload.indexOf(\"Nd\") + 2, msg.payload.indexOf(\"Nd\") + 5);\n    var messageCounter = -1;\n    \n    try {\n        messageCounter = parseInt(msg.payload.split(\" \")[5]);\n    } catch (error) {\n        // Ignore\n    }\n    \n    // Strip off leading 0 i.e. Nd03 becomes just 3, Nd11 becomes 11\n    if (wirelessNodeNumber.indexOf(\"0\") === 0) {\n    \twirelessNodeNumber = wirelessNodeNumber.substring(1, wirelessNodeNumber.length).trim();\n    }\n    \n    // Store the message counter\n    if (typeof context.msgIDs[parseInt(wirelessNodeNumber)] !== 'undefined' && context.msgIDs[parseInt(wirelessNodeNumber)] === messageCounter) {\n        // This is a dup - ignore\n        messages[0] = null;\n    } else {\n        // This isn't a dup/resend\n        context.msgIDs[parseInt(wirelessNodeNumber)] = messageCounter;\n        messages[0] = { payload: msg.payload, topic: \"\" + wirelessNodeNumber, msgcounter: \"\" + messageCounter};\n    }\n}\n\nreturn messages;","outputs":"1","valid":true,"x":351,"y":177,"z":"5d7c6aac.810264","wires":[["87245b5e.3e3dc8","606b8f52.ca10d"]]},{"id":"25bd8cd3.c9bb4c","type":"debug","name":"","active":false,"console":"false","complete":"false","x":1276,"y":175,"z":"5d7c6aac.810264","wires":[]},{"id":"22caa738.cde588","type":"inject","name":"Test loft node","topic":"","payload":"DATA: GROUP(53) HEADER(97) BYTES(15) Nd02 9 56 16 33","payloadType":"string","repeat":"","crontab":"","once":false,"x":130,"y":163,"z":"5d7c6aac.810264","wires":[["4f75be59.8cfa6"]]},{"id":"952463cb.4d5638","type":"function","name":"Parse loft node data","func":"// Node 2 - loft node\nvar messages = [];\n\nmessages[0] = [];\n\nvar tokens = msg.payload.split(\" \");\n\n// Current time & date\nvar dateStamp = \"\" + new Date();\ndateStamp = dateStamp.substring(dateStamp.indexOf(\" \") + 1, dateStamp.indexOf(\"GMT\"));\n\n// Get each of the individual elements from the data\nif (tokens.length > 0) {\n\tmessages[0][0] = { payload: \"\" + tokens[6], topic: \"local/rfm12/nodes/02/humidity\", retain: true };\n\tmessages[0][1] = { payload: \"\" + tokens[7], topic: \"local/rfm12/nodes/02/temp\", retain: true };\n\tmessages[0][2] = { payload: \"\" + tokens[8], topic: \"local/rfm12/nodes/02/voltage\", retain: true };\n\tmessages[0][3] = { payload: dateStamp, topic: \"local/rfm12/nodes/02/lastreceived\", retain: true };\n}\n\nreturn messages;","outputs":1,"valid":true,"x":1026,"y":122,"z":"5d7c6aac.810264","wires":[["25bd8cd3.c9bb4c","ebba594e.f81628"]]},{"id":"87245b5e.3e3dc8","type":"switch","name":"RouteWirelessNodeData","property":"topic","rules":[{"t":"eq","v":2,"v2":0},{"t":"eq","v":3,"v2":0},{"t":"eq","v":4,"v2":0}],"checkall":"false","outputs":3,"x":589,"y":177,"z":"5d7c6aac.810264","wires":[["45cf94c7.5b0954"],["ef79d576.5111f"],["37b4bac2.ab7246"]]},{"id":"71f47e41.b20d78","type":"function","name":"Parse lounge node data","func":"// Node 3 - lounge node\nvar messages = [];\nmessages[0] = [];\n\nvar tokens = msg.payload.split(\" \");\n\n// Current time & date\nvar dateStamp = \"\" + new Date();\ndateStamp = dateStamp.substring(dateStamp.indexOf(\" \") + 1, dateStamp.indexOf(\"GMT\"));\n\n// Get each of the individual elements from the data\nif (tokens.length > 0) {\n\tmessages[0][0] = { payload: \"\" + tokens[6], topic: \"local/rfm12/nodes/03/humidity\", retain: true };\n\tmessages[0][1] = { payload: \"\" + tokens[7], topic: \"local/rfm12/nodes/03/temp\", retain: true };\n\tmessages[0][2] = { payload: \"\" + tokens[8], topic: \"local/rfm12/nodes/03/voltage\", retain: true };\n\tmessages[0][3] = { payload: dateStamp, topic: \"local/rfm12/nodes/03/lastreceived\", retain: true };\n}\n\nreturn messages;","outputs":1,"valid":true,"x":1032,"y":174,"z":"5d7c6aac.810264","wires":[["25bd8cd3.c9bb4c","ebba594e.f81628"]]},{"id":"45cf94c7.5b0954","type":"delay","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","rateUnits":"minute","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"x":823,"y":127,"z":"5d7c6aac.810264","wires":[["952463cb.4d5638"]]},{"id":"ef79d576.5111f","type":"delay","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"minutes","rate":"1","rateUnits":"minute","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"x":831,"y":176,"z":"5d7c6aac.810264","wires":[["71f47e41.b20d78"]]},{"id":"37b4bac2.ab7246","type":"delay","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","rateUnits":"minute","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"x":825,"y":232,"z":"5d7c6aac.810264","wires":[["51f96d11.f9309c"]]},{"id":"51f96d11.f9309c","type":"function","name":"Parse garden node data","func":"// Node 4 - garden node\nvar messages = [];\n\nmessages[0] = [];\n\nvar tokens = msg.payload.split(\" \");\n\n// Current time & date\nvar dateStamp = \"\" + new Date();\ndateStamp = dateStamp.substring(dateStamp.indexOf(\" \") + 1, dateStamp.indexOf(\"GMT\"));\n\n// Get each of the individual elements from the data\nif (tokens.length > 0) {\n\tmessages[0][0] = { payload: \"\" + tokens[6], topic: \"local/rfm12/nodes/04/humidity\", retain: true };\n\tmessages[0][1] = { payload: \"\" + tokens[7], topic: \"local/rfm12/nodes/04/temp\", retain: true };\n\tmessages[0][2] = { payload: \"\" + tokens[8], topic: \"local/rfm12/nodes/04/voltage\", retain: true };\n\tmessages[0][3] = { payload: dateStamp, topic: \"local/rfm12/nodes/04/lastreceived\", retain: true };\n\tmessages[0][4] = { payload: \"Sleep code for node 04 was interrupted at \" + dateStamp, topic: \"local/rfm12/nodes/04/sleepcodeinterrupted\", retain: true };\n}\n\nreturn messages;","outputs":1,"valid":true,"x":1032,"y":234,"z":"5d7c6aac.810264","wires":[["25bd8cd3.c9bb4c","ebba594e.f81628"]]},{"id":"86887e.e46c5f8","type":"inject","name":"Test lounge node","topic":"","payload":"DATA: GROUP(53) HEADER(97) BYTES(15) Nd03 9 52 19 36","payloadType":"string","repeat":"","crontab":"","once":false,"x":143,"y":198,"z":"5d7c6aac.810264","wires":[["4f75be59.8cfa6"]]},{"id":"2ba453c5.c5c544","type":"inject","name":"Test garden node","topic":"","payload":"DATA: GROUP(53) HEADER(97) BYTES(15) Nd04 56 37","payloadType":"string","repeat":"","crontab":"","once":false,"x":143,"y":233,"z":"5d7c6aac.810264","wires":[["4f75be59.8cfa6"]]},{"id":"ebba594e.f81628","type":"mqtt out","name":"Publish all RFM12 data","topic":"","broker":"6ae3bdcd.ab16bc","x":1325,"y":226,"z":"5d7c6aac.810264","wires":[]},{"id":"27280dfb.49bc12","type":"mqtt in","name":"SubscribeRFM12Data","topic":"local/rfm12/#","broker":"6ae3bdcd.ab16bc","x":134,"y":405,"z":"5d7c6aac.810264","wires":[["748001a.0fc768"]]},{"id":"748001a.0fc768","type":"function","name":"MapMQTTtoMySQL","func":"// Simple switch-ish statement to turn an MQTT topic into an SQL statement\nif (!msg.retain) {\n\tif (msg.topic.valueOf() == \"local/rfm12/nodes/02/voltage\".valueOf()) {\n\t\tmsg.topic = \"INSERT INTO mydata.wirelessnodes(nodeid, voltage) values(2, \" + msg.payload + \")\";\n\t} else if (msg.topic.valueOf() == \"local/rfm12/nodes/03/voltage\".valueOf()) {\n\t\tmsg.topic = \"INSERT INTO mydata.wirelessnodes(nodeid, voltage) values(3, \" + msg.payload + \")\";\n\t} else if (msg.topic.valueOf() == \"local/rfm12/nodes/04/voltage\".valueOf()) {\n\t\tmsg.topic = \"INSERT INTO mydata.wirelessnodes(nodeid, voltage) values(4, \" + msg.payload + \")\";\n\t} else if (msg.topic.valueOf() == \"local/rfm12/nodes/02/temp\".valueOf()) {\n\t\tmsg.topic = \"INSERT INTO mydata.temperature2(temperature) values(\" + msg.payload + \")\";\n\t} else if (msg.topic.valueOf() == \"local/rfm12/nodes/02/humidity\".valueOf()) {\n\t\tmsg.topic = \"INSERT INTO mydata.humidity2(humidity) values(\" + msg.payload + \")\";\n\t} else if (msg.topic.valueOf() == \"local/rfm12/nodes/03/temp\".valueOf()) {\n\t\tmsg.topic = \"INSERT INTO mydata.temperature3(temperature) values(\" + msg.payload + \")\";\n\t} else if (msg.topic.valueOf() == \"local/rfm12/nodes/03/humidity\".valueOf()) {\n\t\tmsg.topic = \"INSERT INTO mydata.humidity3(humidity) values(\" + msg.payload + \")\";\n\t} else if (msg.topic.valueOf() == \"local/rfm12/nodes/04/temp\".valueOf()) {\n\t\tmsg.topic = \"INSERT INTO mydata.temperature5(temperature) values(\" + msg.payload + \")\";\n\t} else if (msg.topic.valueOf() == \"local/rfm12/nodes/04/humidity\".valueOf()) {\n\t\tmsg.topic = \"INSERT INTO mydata.humidity5(humidity) values(\" + msg.payload + \")\";\n\t} else {\n\t\tmsg = null;\n\t}\n} else {\n\tmsg = null;\n}\n\nreturn msg;","outputs":1,"valid":true,"x":378,"y":405,"z":"5d7c6aac.810264","wires":[["be2aca09.42451","72bd61c1.c2afa"]]},{"id":"7bb0e53a.9510ec","type":"debug","name":"","active":false,"console":false,"complete":false,"x":747,"y":407,"z":"5d7c6aac.810264","wires":[]},{"id":"be2aca09.42451","type":"debug","name":"","active":false,"console":false,"complete":false,"x":596,"y":460,"z":"5d7c6aac.810264","wires":[]},{"id":"447d1f37.7d672","type":"mqtt in","name":"BBSB Command Receiver","topic":"local/rfm12/command","broker":"6ae3bdcd.ab16bc","x":134.20001220703125,"y":600.0000305175781,"z":"5d7c6aac.810264","wires":[["a8290f87.7ffb48","84f9bf47.f1e76"]]},{"id":"a8290f87.7ffb48","type":"debug","name":"","active":false,"console":false,"complete":false,"x":367.9999694824219,"y":652.8001098632812,"z":"5d7c6aac.810264","wires":[]},{"id":"3cc1ffa4.e2f2d","type":"serial out","name":"Handle BBSB command","serial":"8019c7f2.618c78","x":723.1998901367188,"y":600,"z":"5d7c6aac.810264","wires":[]},{"id":"92ab7f.33f3348","type":"comment","name":"Receive serial data from an Arduino with an RFM12B chip, publish the relevant parts to various MQTT topics","info":"","x":393,"y":32,"z":"5d7c6aac.810264","wires":[]},{"id":"9f8d1180.7b3878","type":"comment","name":"Subscribe to the various MQTT topics that contain data from RFM12B wireless nodes, and put the right bits into a MySQL database","info":"","x":468,"y":349,"z":"5d7c6aac.810264","wires":[]},{"id":"7df659ae.a3983","type":"comment","name":"Subscribe to 'local/rfm12/command' and pass the command to an Arduino with an RFM12B chip to send it to the BBSB sockets in the house","info":"RFM12B chip to send it to the BBSB sockets in the house","x":485.20001220703125,"y":550.8000183105469,"z":"5d7c6aac.810264","wires":[]},{"id":"fe326677.50921","type":"debug","name":"Raw current cost data","active":false,"console":"false","complete":"payload","x":469,"y":1011,"z":"5d7c6aac.810264","wires":[]},{"id":"dc4d8cd5.0364d8","type":"function","name":"(Mains) Round to 10 watts, publish on local and bridged topic","func":"context.lastvalue = typeof context.lastvalue === 'undefined' ? -1 : context.lastvalue;\n\nvar isFirstLoopAfterStarting = context.lastvalue == -1;\n\n// Then round to the nearest 10 watts since we always do this for inbound watts\nvar roundedWatts = Math.round(msg.payload / 10) * 10;\n\nroundedWatts = roundedWatts / 1000;\nvar messages = [];\nmessages[0] = [];\n\nif (context.lastvalue != roundedWatts && roundedWatts > 0) {\n    // Re-publish the last value so graph plots are square\n    if (!isFirstLoopAfterStarting) {\n    \tmessages[0].push({ payload: \"\" + context.lastvalue, topic: \"local/PowerMeter/CC/mattw\", retain: true });\n    }\n    \n    // Then publish the new data\n    if (!isFirstLoopAfterStarting) {\n\t\tmessages[0].push({ payload: \"\" + roundedWatts, topic: \"local/PowerMeter/CC/mattw\", retain: true });\n\t\tmessages[0].push({ payload: \"\" + roundedWatts, topic: \"PowerMeter/CC/mattw\", retain: true });\n\t}\n\tcontext.lastvalue = roundedWatts;\n}\n\nreturn messages;","outputs":1,"valid":true,"x":850,"y":803,"z":"5d7c6aac.810264","wires":[["6c8f8e38.64e858","21389240.e9b376"]]},{"id":"1e6f937e.416065","type":"function","name":"Round to 1 degree, publish on local and bridged topic","func":"context.lastvalue = typeof context.lastvalue === 'undefined' ? -1 : context.lastvalue;\n\nvar isFirstLoopAfterStarting = context.lastvalue == -1;\n\nvar roundedDegrees = Math.round(msg.payload);\nvar messages = [];\nmessages[0] = [];\n\nif (context.lastvalue != roundedDegrees) {\n\t// Re-publish the old value so graph plots are square\n\tif (!isFirstLoopAfterStarting) {\n\t\tmessages[0].push({ payload: \"\" + context.lastvalue, topic: \"local/PowerMeter/temp/mattw\", retain: true });\n\t}\n\t\n\t// Then publish the new real value\n\tmessages[0].push({ payload: \"\" + roundedDegrees, topic: \"local/PowerMeter/temp/mattw\", retain: true });\n\tmessages[0].push({ payload: \"\" + roundedDegrees, topic: \"PowerMeter/temp/mattw\", retain: true });\n\tcontext.lastvalue = roundedDegrees;\n} else {\n\tmsg = null;\n}\n\nreturn messages;","outputs":1,"valid":true,"x":829,"y":948,"z":"5d7c6aac.810264","wires":[["ad297be5.b4a758"]]},{"id":"6c8f8e38.64e858","type":"mqtt out","name":"Publish CurrentCost Data","topic":"","broker":"6ae3bdcd.ab16bc","x":1407,"y":849,"z":"5d7c6aac.810264","wires":[]},{"id":"5c897914.4c7188","type":"comment","name":"Capture all data from CurrentCost and republish it on MQTT","info":"","x":242,"y":746,"z":"5d7c6aac.810264","wires":[]},{"id":"31944693.20e92a","type":"comment","name":"Take the published MQTT CurrentCost data and insert the relevant bits into a database","info":"","x":328,"y":1085,"z":"5d7c6aac.810264","wires":[]},{"id":"ee744eb5.ea9148","type":"mqtt in","name":"Subscribe to CurrentCost data","topic":"local/PowerMeter/#","broker":"6ae3bdcd.ab16bc","x":147,"y":1139,"z":"5d7c6aac.810264","wires":[["85137c4f.4f12d8"]]},{"id":"85137c4f.4f12d8","type":"function","name":"MapMQTTtoMySQL","func":"// Simple switch-ish statement to turn an MQTT topic into an SQL statement\nif (!msg.retain) {\n\tif (msg.topic == \"local/PowerMeter/CC/mattw\") {\n\t\tmsg.topic = \"INSERT INTO mydata.electricity(watts) values(\" + (msg.payload * 1000) + \")\";\n\t} else if (msg.topic == \"local/PowerMeter/temp/mattw\") {\n\t\tmsg.topic = \"INSERT INTO mydata.temperature(temperature) values(\" + msg.payload + \")\";\n\t} else if (msg.topic == \"local/PowerMeter/appliance\") {\n\t\tmsg.topic = \"INSERT INTO mydata.miscappliance(watts,appliancenumber) values(\" + msg.payload + \",1)\";\n\t} else {\n\t\tmsg = null;\n\t}\n} else {\n\tmsg = null;\n}\n\nreturn msg;","outputs":1,"valid":true,"x":403,"y":1139,"z":"5d7c6aac.810264","wires":[["50282fc3.85e478"]]},{"id":"50282fc3.85e478","type":"mysql","mydb":"3d5e337a.5a9084","name":"mydata","x":613,"y":1140,"z":"5d7c6aac.810264","wires":[["de5e2c03.f16f7"]]},{"id":"de5e2c03.f16f7","type":"debug","name":"","active":false,"console":false,"complete":false,"x":770,"y":1140,"z":"5d7c6aac.810264","wires":[]},{"id":"1453700a.8e435","type":"mqtt in","name":"Subscribe to wireless node transmissions","topic":"local/rfm12/nodes/#","broker":"6ae3bdcd.ab16bc","x":196,"y":109,"z":"7a69b8ae.02f248","wires":[["b0ca10c8.17fad"]]},{"id":"b0ca10c8.17fad","type":"function","name":"Store latest wireless node timestamps","func":"if (!msg.retain) {\n\tif (msg.topic.indexOf(\"local/rfm12/nodes/02\") >= 0) {\n\t\tcontext.global.wirelessnode2 = new Date().getTime();\n\t} else if (msg.topic.indexOf(\"local/rfm12/nodes/03\") >= 0) {\n\t\tcontext.global.wirelessnode3 = new Date().getTime();\n\t} else if (msg.topic.indexOf(\"local/rfm12/nodes/04\") >= 0) {\n\t\tcontext.global.wirelessnode4 = new Date().getTime();\n\t}\n}\n\nreturn null;","outputs":1,"valid":true,"x":530,"y":109,"z":"7a69b8ae.02f248","wires":[[]]},{"id":"75866a01.143574","type":"inject","name":"Check for recent wireless transmissions","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"0 */2 * * *","once":false,"x":190,"y":224,"z":"7a69b8ae.02f248","wires":[["2023cc2a.c5fed4"]]},{"id":"2023cc2a.c5fed4","type":"function","name":"Alert if transmission not seen recently","func":"// If we haven't got any data at all from a wireless node, start with the current time (msg.payload)\ncontext.global.wirelessnode2 = typeof context.global.wirelessnode2 === 'undefined' ? msg.payload : context.global.wirelessnode2;\ncontext.global.wirelessnode3 = typeof context.global.wirelessnode3 === 'undefined' ? msg.payload : context.global.wirelessnode3;\ncontext.global.wirelessnode4 = typeof context.global.wirelessnode4 === 'undefined' ? msg.payload : context.global.wirelessnode4;\n\n\n// Initialise a local variable to store a flag so we only send 1 alert per \n// wireless node. This is reset once a wireless node has been seen again.\ncontext.wirelessnode2 = context.wirelessnode2 || {};\ncontext.wirelessnode3 = context.wirelessnode3 || {};\ncontext.wirelessnode4 = context.wirelessnode4 || {};\ncontext.wirelessnode2.alerted = typeof context.wirelessnode2.alerted === 'undefined' ? false : context.wirelessnode2.alerted;\ncontext.wirelessnode3.alerted = typeof context.wirelessnode3.alerted === 'undefined' ? false : context.wirelessnode3.alerted;\ncontext.wirelessnode4.alerted = typeof context.wirelessnode4.alerted === 'undefined' ? false : context.wirelessnode4.alerted;\n\nvar messages = [];\nmessages[0] = [];\n\n// 12 hours\nvar allowedTimeSinceIndoorTransmission = (1000 * 60 * 720);\n\n// 12 hours\nvar allowedTimeSinceOutdoorTransmission = (1000 * 60 * 720);\n\nif ((msg.payload - context.global.wirelessnode2) > allowedTimeSinceIndoorTransmission) {\n\tif (!context.wirelessnode2.alerted) {\n\t\tmessages[0].push({ payload: '\"No wireless data received from node 2 recently (' + msg.payload + ')\"' });\n\t\tcontext.wirelessnode2.alerted = true;\n\t}\n} else {\n\tcontext.wirelessnode2.alerted = false;\n}\n\nif ((msg.payload - context.global.wirelessnode3) > allowedTimeSinceIndoorTransmission) {\n\tif (!context.wirelessnode3.alerted) {\n\t\tmessages[0].push({ payload: '\"No wireless data received from node 3 recently (' + msg.payload + ')\"' });\n\t\tcontext.wirelessnode3.alerted = true;\n\t}\n} else {\n\tcontext.wirelessnode3.alerted = false;\n}\n\nif ((msg.payload - context.global.wirelessnode4) > allowedTimeSinceOutdoorTransmission) {\n\tif (!context.wirelessnode4.alerted) {\n\t\tmessages[0].push({ payload: '\"No wireless data received from node 4 recently (' + msg.payload + ')\"' });\n\t\tcontext.wirelessnode4.alerted = true;\n\t}\n} else {\n\tcontext.wirelessnode4.alerted = false;\n}\n\nreturn messages;","outputs":1,"valid":true,"x":530,"y":224,"z":"7a69b8ae.02f248","wires":[["d0aa5d56.0d66f"]]},{"id":"d0aa5d56.0d66f","type":"exec","command":"/home/mwhitehead/opt/sendtweet/sendtweet.sh","append":"","useSpawn":"","name":"","x":912,"y":225,"z":"7a69b8ae.02f248","wires":[[],[],[]]},{"id":"50c7a64e.e7b318","type":"comment","name":"Subscribe to wireless node transmissions on MQTT and update their locally stored \"last seen\" timestamp so we can act on it","info":"","x":450,"y":61,"z":"7a69b8ae.02f248","wires":[]},{"id":"5e8d98f4.1309a8","type":"comment","name":"Periodically check all of the locally stored timestamps and send a tweet if a wireless node hasn't been seen for a while","info":"","x":434,"y":180,"z":"7a69b8ae.02f248","wires":[]},{"id":"c694d562.b29eb","type":"inject","name":"TV off Monday-Friday night","topic":"local/rfm/bbsb/commands","payload":"BBSB 4 A 0:","payloadType":"string","repeat":"","crontab":"*/10 0 * * 1,2,3,4,5","once":false,"x":209,"y":110,"z":"bef50b75.d162a","wires":[["9e55cefc.28361"]]},{"id":"9e55cefc.28361","type":"mqtt out","name":"Publish BBSB commands","topic":"","broker":"6ae3bdcd.ab16bc","x":767,"y":395,"z":"bef50b75.d162a","wires":[]},{"id":"7cae63a6.5f4b8c","type":"inject","name":"TV off Saturday-Sunday night","topic":"local/rfm/bbsb/commands","payload":"BBSB 4 A 0:","payloadType":"string","repeat":"","crontab":"*/3 1 * * 6,0","once":false,"x":217,"y":154,"z":"bef50b75.d162a","wires":[["9e55cefc.28361"]]},{"id":"9ecd150b.6933b","type":"inject","name":"TV off Monday-Friday mornings","topic":"local/rfm/bbsb/commands","payload":"BBSB 4 A 0:","payloadType":"string","repeat":"","crontab":"*/10 9 * * 1,2,3,4,5","once":false,"x":221,"y":68,"z":"bef50b75.d162a","wires":[["9e55cefc.28361"]]},{"id":"e91982b6.7e5f58","type":"inject","name":"TV off test","topic":"local/rfm/bbsb/commands","payload":"BBSB 4 A 0:","payloadType":"string","repeat":"","crontab":"","once":false,"x":302,"y":264,"z":"bef50b75.d162a","wires":[["9e55cefc.28361"]]},{"id":"cf23a786.71678","type":"inject","name":"Broadband off Monday-Friday mornings","topic":"local/rfm/bbsb/commands","payload":"BBSB 5 A 0:","payloadType":"string","repeat":"","crontab":"*/10 8-9 * * 1,2,3,4,5","once":false,"x":239.79998779296875,"y":393,"z":"bef50b75.d162a","wires":[["77d43200.1b3578"]]},{"id":"9422d6d0.300798","type":"inject","name":"Broadband off every night","topic":"local/rfm/bbsb/commands","payload":"BBSB 5 A 0:","payloadType":"string","repeat":"","crontab":"*/10 0 * * *","once":false,"x":197,"y":521,"z":"bef50b75.d162a","wires":[["9e55cefc.28361"]]},{"id":"83a82ead.d7242","type":"inject","name":"Broadband on Monday-Friday lunchtime","topic":"local/rfm/bbsb/commands","payload":"BBSB 5 A 1:","payloadType":"string","repeat":"","crontab":"*/10 11 * * 1,2,3,4,5","once":false,"x":243,"y":564,"z":"bef50b75.d162a","wires":[["9e55cefc.28361"]]},{"id":"f4ffbeb4.f1506","type":"inject","name":"Broadband on Monday-Friday morning","topic":"local/rfm/bbsb/commands","payload":"BBSB 5 A 1:","payloadType":"string","repeat":"","crontab":"*/5 6 * * 1,2,3,4,5","once":false,"x":239,"y":436,"z":"bef50b75.d162a","wires":[["9e55cefc.28361"]]},{"id":"e9174ddd.8c681","type":"inject","name":"Lounge lamps off every night","topic":"local/rfm/bbsb/commands","payload":"BBSB 1 A 0:","payloadType":"string","repeat":"","crontab":"*/10 1 * * *","once":false,"x":206.79998779296875,"y":678.4000244140625,"z":"bef50b75.d162a","wires":[["9e55cefc.28361"]]},{"id":"a49debd.5d9e998","type":"inject","name":"Dining room lamps off every night","topic":"local/rfm/bbsb/commands","payload":"BBSB 2 A 0:","payloadType":"string","repeat":"","crontab":"*/10 1 * * *","once":false,"x":220.80001831054688,"y":721.5999755859375,"z":"bef50b75.d162a","wires":[["9e55cefc.28361"]]},{"id":"879baf5f.c3c838","type":"function","name":"(Solar) Round to 10 watts, publish on local topic","func":"context.lastvalue = typeof context.lastvalue === 'undefined' ? -1 : context.lastvalue;\ncontext.global.solarwatts = typeof context.global.solarwatts === 'undefined' ? -1 : context.global.solarwatts;\ncontext.global.solarlasttimestamp = typeof context.global.solarlasttimestamp === 'undefined' ? -1 : context.global.solarlasttimestamp;\n\nvar isFirstLoopAfterStarting = context.lastvalue == -1;\n\nNumber.prototype.roundTo = function(multiple) {\n   var result = this % multiple;\n   if (result <= (multiple / 2)) { \n       return this - result;\n   } else {\n       return this + multiple - result;\n   }\n}\n\n//var roundedWatts = msg.payload.roundTo(10);\nvar roundedWatts = Math.round(msg.payload / 10) * 10;\n\nvar messages = [];\nmessages[0] = [];\n\n// Set the node global variable for other nodes to use\ncontext.global.solarwatts = roundedWatts;\ncontext.global.solarlasttimestamp = new Date().getTime();\n\nif (context.lastvalue != roundedWatts) {\n    // Re-publish the last value so graph plots are square\n    if (!isFirstLoopAfterStarting) {\n    \tmessages[0].push({ payload: \"\" + context.lastvalue, topic: \"local/PowerMeter/solar\", retain: true });\n    }\n    \n    // Then publish the new data\n    if (!isFirstLoopAfterStarting) {\n\t\tmessages[0].push({ payload: \"\" + roundedWatts, topic: \"local/PowerMeter/solar\", retain: true });\n\t}\n\tcontext.lastvalue = roundedWatts;\n}\n\nreturn messages;","outputs":1,"valid":true,"x":808,"y":853,"z":"5d7c6aac.810264","wires":[["6c8f8e38.64e858","bc7ee047.345dd8"]]},{"id":"7e83d4fe.fffdec","type":"mqtt in","name":"Subscribe to CurrentCost solar data","topic":"local/PowerMeter/solar","broker":"6ae3bdcd.ab16bc","x":173,"y":1269,"z":"5d7c6aac.810264","wires":[["427d22ca.c3329c","3a1ec730.ae2938"]]},{"id":"427d22ca.c3329c","type":"debug","name":"","active":false,"console":false,"complete":false,"x":757,"y":1270,"z":"5d7c6aac.810264","wires":[]},{"id":"5579f23b.df3d9c","type":"comment","name":"Subscribe to solar data - once we have the panel actually plugged in, do something with it here","info":"","x":354,"y":1223,"z":"5d7c6aac.810264","wires":[]},{"id":"b1c5ca5c.2bb738","type":"inject","name":"Broadband on Saturday/Sunday morning","topic":"local/rfm/bbsb/commands","payload":"BBSB 5 A 1:","payloadType":"string","repeat":"","crontab":"*/5 8 * * 6,0","once":false,"x":244,"y":479,"z":"bef50b75.d162a","wires":[["9e55cefc.28361"]]},{"id":"ad297be5.b4a758","type":"delay","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"60","rateUnits":"hour","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"x":1140,"y":948,"z":"5d7c6aac.810264","wires":[["6c8f8e38.64e858","f4cf8f11.1a365"]]},{"id":"3a1ec730.ae2938","type":"function","name":"MapMQTTtoMySQL","func":"// Simple switch-ish statement to turn an MQTT topic into an SQL statement\nif (!msg.retain) {\n\tif (!isNaN(msg.payload) && msg.topic.valueOf() == \"local/PowerMeter/solar\".valueOf()) {\n\t\tmsg.topic = \"INSERT INTO mydata.solar(watts) values(\" + (msg.payload) + \")\";\n\t} else {\n\t\tmsg = null;\n\t}\n} else {\n\tmsg = null;\n}\n\n\nreturn msg;","outputs":1,"valid":true,"x":442,"y":1304,"z":"5d7c6aac.810264","wires":[["ce6033f2.f05f5"]]},{"id":"ce6033f2.f05f5","type":"mysql","mydb":"3d5e337a.5a9084","name":"","x":617,"y":1304,"z":"5d7c6aac.810264","wires":[["427d22ca.c3329c"]]},{"id":"ef7cb541.201398","type":"mqtt in","name":"Check for WFH flag","topic":"local/power/routerstandby","broker":"6ae3bdcd.ab16bc","x":158,"y":1022,"z":"bef50b75.d162a","wires":[["8fb8e410.f134c"]]},{"id":"dd6ea0d0.f8446","type":"debug","name":"","active":false,"console":false,"complete":false,"x":566,"y":1022,"z":"bef50b75.d162a","wires":[]},{"id":"8fb8e410.f134c","type":"function","name":"Set WFH context","func":"if (msg.payload == \"disabled\") {\n\t// Router power-down during the morning is disabled because someone is WFH\n\tcontext.global.wfh = true;\n} else {\n\tcontext.global.wfh = false;\n}\n\nreturn msg;","outputs":1,"valid":true,"x":367,"y":1022,"z":"bef50b75.d162a","wires":[["dd6ea0d0.f8446"]]},{"id":"77d43200.1b3578","type":"function","name":"WFH check","func":"context.global.wfh = typeof context.global.wfh === 'undefined' ? false : context.global.wfh;\n\n// If we know someone is WFH, don't pass this message on to the BBSB transmitter\nif (context.global.wfh) {\n\tmsg = null;\n}\n\nreturn msg;","outputs":1,"valid":true,"x":475,"y":393,"z":"bef50b75.d162a","wires":[["9e55cefc.28361"]]},{"id":"3ef2bb5f.a15c74","type":"comment","name":"Set a global flag to indicate if someone is WFH, so we don't turn absolutely everything off during the day","info":"","x":421,"y":975,"z":"bef50b75.d162a","wires":[]},{"id":"9d4b821c.be7d48","type":"inject","name":"TV on test","topic":"local/rfm/bbsb/commands","payload":"BBSB 4 A 1:","payloadType":"string","repeat":"","crontab":"","once":false,"x":302,"y":222,"z":"bef50b75.d162a","wires":[["9e55cefc.28361"]]},{"id":"bc7ee047.345dd8","type":"debug","name":"","active":false,"console":"false","complete":"false","x":1165,"y":903,"z":"5d7c6aac.810264","wires":[]},{"id":"ba4e8d62.0a2bc","type":"debug","name":"","active":false,"console":false,"complete":false,"x":329,"y":73,"z":"5d7c6aac.810264","wires":[]},{"id":"f4cf8f11.1a365","type":"debug","name":"Filtered temp data","active":false,"console":"false","complete":"false","x":1384,"y":948,"z":"5d7c6aac.810264","wires":[]},{"id":"3f12d722.2c988","type":"inject","name":"Tree lights off every night","topic":"local/rfm/bbsb/commands","payload":"BBSB 3 A 0:","payloadType":"string","repeat":"","crontab":"*/10 1-18 * * *","once":false,"x":195.19998168945312,"y":634.0000610351562,"z":"bef50b75.d162a","wires":[["9e55cefc.28361"]]},{"id":"84f9bf47.f1e76","type":"trigger","op1":"","op2":"","op1type":"pay","op2type":"pay","duration":"5","extend":"false","units":"s","name":"Duplicate transmission payload","x":426.2000732421875,"y":599.800048828125,"z":"5d7c6aac.810264","wires":[["3cc1ffa4.e2f2d","8652dc14.b5905"]]},{"id":"8652dc14.b5905","type":"debug","name":"","active":false,"console":false,"complete":false,"x":690.2000122070312,"y":655.7999267578125,"z":"5d7c6aac.810264","wires":[]},{"id":"21389240.e9b376","type":"debug","name":"","active":false,"console":"false","complete":"false","x":1199,"y":750,"z":"5d7c6aac.810264","wires":[]},{"id":"a4682ee3.f02678","type":"function","name":"(Appliance) Round to 10 watts, publish on local topic","func":"context.lastvalue = typeof context.lastvalue === 'undefined' ? -1 : context.lastvalue;\ncontext.global.appliancewatts = typeof context.global.appliancewatts === 'undefined' ? -1 : context.global.appliancewatts;\ncontext.global.appliancelasttimestamp = typeof context.global.appliancelasttimestamp === 'undefined' ? -1 : context.global.appliancelasttimestamp;\n\nvar isFirstLoopAfterStarting = context.lastvalue == -1;\n\nNumber.prototype.roundTo = function(multiple) {\n   var result = this % multiple;\n   if (result <= (multiple / 2)) { \n       return this - result;\n   } else {\n       return this + multiple - result;\n   }\n}\n\n//var roundedWatts = msg.payload.roundTo(10);\nvar roundedWatts = msg.payload;\n\nvar messages = [];\nmessages[0] = [];\n\n// Set the node global variable for other nodes to use\ncontext.global.appliancewatts = roundedWatts;\ncontext.global.appliancelasttimestamp = new Date().getTime();\n\nif (context.lastvalue != roundedWatts) {\n    // Re-publish the last value so graph plots are square\n    if (!isFirstLoopAfterStarting) {\n    \tmessages[0].push({ payload: \"\" + context.lastvalue, topic: \"local/PowerMeter/appliance\", retain: true });\n    }\n    \n    // Then publish the new data\n    if (!isFirstLoopAfterStarting) {\n\t\tmessages[0].push({ payload: \"\" + roundedWatts, topic: \"local/PowerMeter/appliance\", retain: true });\n\t}\n\tcontext.lastvalue = roundedWatts;\n}\n\nreturn messages;","outputs":1,"valid":true,"x":824,"y":903,"z":"5d7c6aac.810264","wires":[["bc7ee047.345dd8","6c8f8e38.64e858"]]},{"id":"865b8d53.a59818","type":"mqtt in","name":"Current cost temperature","topic":"local/CC/bridge/tmp","broker":"6ae3bdcd.ab16bc","x":145,"y":951,"z":"5d7c6aac.810264","wires":[["fe326677.50921","1e6f937e.416065"]]},{"id":"a28e2d8b.179d88","type":"http request","name":"Get Nest Device Data","method":"GET","url":"https://developer-api.nest.com/devices.json?auth=c.WmDhPHFDAqb645JFRaLSX05widWSCBeTzznhPBNpPMc4zHANvPjpzAGMpzRwKhJzDj80cqVQnG1GlbqdIhwccZqANOUDUXizq0gEqUaK9bSDUlp0mrMke78Wolu8pAJYZZAhEsP4Qg15gJam","x":478,"y":1452,"z":"5d7c6aac.810264","wires":[["60f21aa1.d9e84c"]]},{"id":"d5e16a63.76d78","type":"inject","name":"Poll the Nest server occasionally","topic":"","payload":"","payloadType":"date","repeat":"1800","crontab":"","once":false,"x":177,"y":1524,"z":"5d7c6aac.810264","wires":[["a28e2d8b.179d88","439ab4cd.93988c"]]},{"id":"60f21aa1.d9e84c","type":"json","name":"","x":673,"y":1452,"z":"5d7c6aac.810264","wires":[["ff9e5535.ea2268","b03fe77c.4fc018"]]},{"id":"ff9e5535.ea2268","type":"function","name":"Extract device data","func":"var msgs = [];\nvar sqlQuery = '';\nvar nextValue = 0;\n\nfor (var nextThermostat in msg.payload.thermostats) {\n   nextValue = msg.payload.thermostats[nextThermostat].ambient_temperature_c;\n   sqlQuery = 'INSERT INTO mydata.temperature4(temperature) values(' + nextValue + ')';\n   msgs[0] = {'payload':{'currenttemperature':nextValue}, 'topic':sqlQuery};\n   \n   nextValue = msg.payload.thermostats[nextThermostat].humidity;\n   sqlQuery = 'INSERT INTO mydata.humidity4(humidity) values(' + nextValue + ')';\n   msgs[1] = {'payload':{'currenthumidity':nextValue}, 'topic':sqlQuery};\n   \n   msgs[2] = {'payload':{'lastupdate':msg.payload.thermostats[nextThermostat].last_connection}};\n}\n\nreturn msgs;","outputs":"3","valid":true,"x":876,"y":1511,"z":"5d7c6aac.810264","wires":[["792ae689.86d518","58f6c9be.86adb8"],["839581ef.7c6a8","58f6c9be.86adb8"],["58f6c9be.86adb8"]]},{"id":"439ab4cd.93988c","type":"http request","name":"Get Nest Structure Data","method":"GET","url":"https://developer-api.nest.com/structures.json?auth=c.WmDhPHFDAqb645JFRaLSX05widWSCBeTzznhPBNpPMc4zHANvPjpzAGMpzRwKhJzDj80cqVQnG1GlbqdIhwccZqANOUDUXizq0gEqUaK9bSDUlp0mrMke78Wolu8pAJYZZAhEsP4Qg15gJam","x":483,"y":1596,"z":"5d7c6aac.810264","wires":[["49424e19.3ac6e8"]]},{"id":"49424e19.3ac6e8","type":"json","name":"","x":672,"y":1596,"z":"5d7c6aac.810264","wires":[["6415482c.515498","b9faba2c.5d8b9"]]},{"id":"6415482c.515498","type":"function","name":"Extract structure data","func":"for (var nextStructure in msg.payload) {\n   msg = {'payload':{'away': msg.payload[nextStructure].away}};\n}\nreturn msg;","outputs":1,"valid":true,"x":861,"y":1596,"z":"5d7c6aac.810264","wires":[["58f6c9be.86adb8"]]},{"id":"c3994759.4848e","type":"comment","name":"Occasionally get the latest data from the Nest thermostat in the hallway and store it in our local database","info":"","x":386,"y":1402,"z":"5d7c6aac.810264","wires":[]},{"id":"58f6c9be.86adb8","type":"debug","name":"","active":true,"console":"true","complete":"true","x":1132,"y":1596,"z":"5d7c6aac.810264","wires":[]},{"id":"91a6e1e5.9fe558","type":"mysql","mydb":"3d5e337a.5a9084","name":"","x":1337,"y":1493,"z":"5d7c6aac.810264","wires":[["6da5dcf4.c78194"]]},{"id":"6da5dcf4.c78194","type":"debug","name":"","active":false,"console":"false","complete":"false","x":1517,"y":1493,"z":"5d7c6aac.810264","wires":[]},{"id":"c329971b.c485d8","type":"mqtt in","name":"Current cost mains","topic":"local/CC/bridge/1/1","broker":"6ae3bdcd.ab16bc","x":124,"y":800,"z":"5d7c6aac.810264","wires":[["dc4d8cd5.0364d8","fe326677.50921"]]},{"id":"931c5fba.d9f0e8","type":"mqtt in","name":"Current cost solar","topic":"local/CC/bridge/2/1","broker":"6ae3bdcd.ab16bc","x":123,"y":848,"z":"5d7c6aac.810264","wires":[["879baf5f.c3c838","fe326677.50921"]]},{"id":"cd2d2306.2230a8","type":"mqtt in","name":"Current cost appliance","topic":"local/CC/bridge/0/1","broker":"6ae3bdcd.ab16bc","x":138,"y":900,"z":"5d7c6aac.810264","wires":[["a4682ee3.f02678","fe326677.50921"]]},{"id":"cc88541b.3377a8","type":"inject","name":"Enable WFH","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":666,"y":115,"z":"bef50b75.d162a","wires":[["2b202de5.d4dfd2"]]},{"id":"2b202de5.d4dfd2","type":"function","name":"Enable WFH flag","func":"context.global.wfh = true;\nreturn null;","outputs":1,"valid":true,"x":869,"y":115,"z":"bef50b75.d162a","wires":[[]]},{"id":"8005d25f.7ffa3","type":"inject","name":"Disable WFH","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":667,"y":164,"z":"bef50b75.d162a","wires":[["6c03d2da.93fc2c"]]},{"id":"6c03d2da.93fc2c","type":"function","name":"Disable WFH flag","func":"context.global.wfh = false;\nreturn null;","outputs":1,"valid":true,"x":868,"y":164,"z":"bef50b75.d162a","wires":[[]]},{"id":"5b3da15d.a4c26","type":"exec","command":"/home/mwhitehead/mrw-code/opt/backup/backup.sh","addpay":false,"append":"","useSpawn":"","name":"Take backup of files and data","x":502,"y":167,"z":"b06c02e6.4f94","wires":[["ce10d852.31ef28"],["ce10d852.31ef28"],["ce10d852.31ef28"]]},{"id":"12bf80c7.ed407f","type":"inject","name":"Run weekly backup","topic":"","payload":"","payloadType":"date","repeat":"129600","crontab":"","once":false,"x":179,"y":167,"z":"b06c02e6.4f94","wires":[["5b3da15d.a4c26"]]},{"id":"ce10d852.31ef28","type":"file","name":"Log exec results","filename":"/tmp/nodered-flow-logs.txt","appendNewline":true,"overwriteFile":"false","x":964,"y":286,"z":"b06c02e6.4f94","wires":[]},{"id":"59be9ca.fa64164","type":"catch","name":"Catch general errors","x":533,"y":288,"z":"b06c02e6.4f94","wires":[["ce10d852.31ef28"]]},{"id":"92656565.6d9a98","type":"catch","name":"Catch general errors","x":158,"y":1149,"z":"bef50b75.d162a","wires":[["99c78ca1.66387"]]},{"id":"b96ceaeb.469318","type":"catch","name":"Catch general errors","x":138,"y":557,"z":"7a69b8ae.02f248","wires":[["9701ac5d.68fe5"]]},{"id":"5caec395.a3513c","type":"catch","name":"Catch general errors","x":126,"y":1769,"z":"5d7c6aac.810264","wires":[["52bc5179.ad43b"]]},{"id":"99c78ca1.66387","type":"file","name":"Log exec results","filename":"/tmp/nodered-flow-logs.txt","appendNewline":true,"overwriteFile":"false","x":392,"y":1149,"z":"bef50b75.d162a","wires":[]},{"id":"9701ac5d.68fe5","type":"file","name":"Log exec results","filename":"/tmp/nodered-flow-logs.txt","appendNewline":true,"overwriteFile":"false","x":379,"y":557,"z":"7a69b8ae.02f248","wires":[]},{"id":"52bc5179.ad43b","type":"file","name":"Log exec results","filename":"/tmp/nodered-flow-logs.txt","appendNewline":true,"overwriteFile":"false","x":387,"y":1769,"z":"5d7c6aac.810264","wires":[]},{"id":"1e53dbdc.e1ac24","type":"comment","name":"Catch and log errors","info":"","x":137,"y":506,"z":"7a69b8ae.02f248","wires":[]},{"id":"d06d1b31.2f92e8","type":"comment","name":"Catch and log errors","info":"","x":126,"y":1712,"z":"5d7c6aac.810264","wires":[]},{"id":"652d331f.9ad2cc","type":"comment","name":"Catch and log errors","info":"","x":159,"y":1095,"z":"bef50b75.d162a","wires":[]},{"id":"ad770e.ff5288f","type":"comment","name":"Catch and log errors","info":"","x":533,"y":248,"z":"b06c02e6.4f94","wires":[]},{"id":"839581ef.7c6a8","type":"delay","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","rateUnits":"minute","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1150,"y":1510,"z":"5d7c6aac.810264","wires":[["91a6e1e5.9fe558"]]},{"id":"792ae689.86d518","type":"delay","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","rateUnits":"minute","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1151,"y":1471,"z":"5d7c6aac.810264","wires":[["91a6e1e5.9fe558"]]},{"id":"b03fe77c.4fc018","type":"function","name":"Republish the data","func":"var msgs = [];\nvar mqttTopic = '';\nvar nextValue = 0;\n\nfor (var nextThermostat in msg.payload.thermostats) {\n   nextValue = msg.payload.thermostats[nextThermostat].ambient_temperature_c;\n   mqttTopic = 'local/nest/hallway/temp';\n   msgs[0] = {'payload':nextValue, 'topic':mqttTopic};\n   \n   nextValue = msg.payload.thermostats[nextThermostat].humidity;\n   mqttTopic = 'local/nest/hallway/humidity';\n   msgs[1] = {'payload':nextValue, 'topic':mqttTopic};\n}\n\nreturn msgs;","outputs":"2","valid":true,"x":872,"y":1413,"z":"5d7c6aac.810264","wires":[["166733e7.e998cc"],["166733e7.e998cc"]]},{"id":"166733e7.e998cc","type":"mqtt out","name":"Publish to MQTT","topic":"","qos":"","retain":"true","broker":"6ae3bdcd.ab16bc","x":1162,"y":1412,"z":"5d7c6aac.810264","wires":[]},{"id":"55a2b610.2fb7f8","type":"comment","name":"Read the gas meter using the new magnetic hall sensor","info":"","x":243,"y":1863,"z":"5d7c6aac.810264","wires":[]},{"id":"606b8f52.ca10d","type":"debug","name":"","active":false,"console":"false","complete":"false","x":571,"y":264,"z":"5d7c6aac.810264","wires":[]},{"id":"812f5530.11321","type":"change","name":"Remove newline chars","rules":[{"t":"change","p":"payload","from":"\\r\\n","to":"","re":true}],"action":"","property":"","from":"","to":"","reg":false,"x":415,"y":1911,"z":"5d7c6aac.810264","wires":[["7d94a578.826b5c","469a0bd.96695f4"]]},{"id":"1d62d5fa.df0682","type":"serial in","name":"Read the gas meter arduino","serial":"d3cf0ed9.38a9c8","x":154,"y":1912,"z":"5d7c6aac.810264","wires":[["812f5530.11321","291d02f0.dd9746"]]},{"id":"f37cadbb.cc02","type":"debug","name":"Show when a gas tick happens","active":false,"console":"false","complete":"true","x":1219,"y":1867,"z":"5d7c6aac.810264","wires":[]},{"id":"d9bf5cac.baf208","type":"mysql","mydb":"3d5e337a.5a9084","name":"Insert tick into database","x":1197,"y":1912,"z":"5d7c6aac.810264","wires":[[]]},{"id":"a590fd77.04fa18","type":"mqtt out","name":"Publish that the gas is on over MQTT","topic":"","qos":"","retain":"","broker":"6ae3bdcd.ab16bc","x":1240,"y":1956,"z":"5d7c6aac.810264","wires":[]},{"id":"7e1c8087.e6fb28","type":"inject","name":"Run database stats collector","topic":"","payload":"","payloadType":"date","repeat":"79200","crontab":"","once":false,"x":208,"y":429,"z":"b06c02e6.4f94","wires":[["86b3ecb7.3c8b3"]]},{"id":"86b3ecb7.3c8b3","type":"exec","command":"perl /home/mwhitehead/mrw-code/opt/housemonitor/dbaveragecalculations.pl","addpay":false,"append":"","useSpawn":"","name":"Calculate daily stats for easier data analysis","x":552,"y":429,"z":"b06c02e6.4f94","wires":[["ce10d852.31ef28"],["ce10d852.31ef28"],["ce10d852.31ef28"]]},{"id":"7d94a578.826b5c","type":"debug","name":"","active":false,"console":"false","complete":"false","x":656,"y":1978,"z":"5d7c6aac.810264","wires":[]},{"id":"469a0bd.96695f4","type":"function","name":"Capture the 'tick' and send to debug, MQTT, and SQ","func":"var messages = [];\n\nif (!isNaN(msg.payload)) {\n  messages[0] = {tick:true, originalPayload: msg.payload, topic: \"INSERT INTO gas(tick) VALUES(1)\"};\n  messages[1] = {payload:parseInt(msg.payload), topic: \"local/gasmonitor/tick\", retain: false};\n}\n\nreturn messages;","outputs":"2","valid":true,"x":783,"y":1911,"z":"5d7c6aac.810264","wires":[["f37cadbb.cc02","d9bf5cac.baf208"],["a590fd77.04fa18"]]},{"id":"291d02f0.dd9746","type":"debug","name":"","active":true,"console":"false","complete":"true","x":374,"y":1982,"z":"5d7c6aac.810264","wires":[]},{"id":"9e87c66f.42af3","type":"mqtt out","name":"Publish to MQTT","topic":"local/houseempty","qos":"1","retain":"true","broker":"6ae3bdcd.ab16bc","x":1165,"y":1665,"z":"5d7c6aac.810264","wires":[]},{"id":"b9faba2c.5d8b9","type":"function","name":"Check if the house is now empty","func":"context.houseempty = typeof context.houseempty === 'undefined' ? false : context.houseempty;\n\nfor (var nextStructure in msg.payload) {\n    // It's now 'away', and it was 'home' - something's changed\n    if (msg.payload[nextStructure].away == \"away\" ||\n        msg.payload[nextStructure].away == \"auto-away\" &&\n        !context.houseempty) {\n            context.houseempty = true;\n            msg.payload = \"1\";\n    } else if (msg.payload[nextStructure].away == \"home\" &&\n        context.houseempty) {\n            context.houseempty = false;\n            msg.payload = \"0\";\n    } else {\n        msg = null;\n    }\n}\n\nreturn msg;","outputs":1,"valid":true,"x":898,"y":1665,"z":"5d7c6aac.810264","wires":[["58f6c9be.86adb8","9e87c66f.42af3"]]},{"id":"124ab31d.68d835","type":"mqtt in","name":"Subscribe to \"house empty\" events from Nest","topic":"local/houseempty","broker":"6ae3bdcd.ab16bc","x":209,"y":337,"z":"7a69b8ae.02f248","wires":[["b4db906e.383398","64723f81.d870a"]]},{"id":"4372407.7f1d8c","type":"comment","name":"When Nest thinks everyone has left the house, or someone has come back home, do something","info":"","x":367,"y":291,"z":"7a69b8ae.02f248","wires":[]},{"id":"b4db906e.383398","type":"debug","name":"","active":false,"console":"false","complete":"true","x":500,"y":396,"z":"7a69b8ae.02f248","wires":[]},{"id":"e16bd6df.e8436","type":"e-mail","server":"smtp.gmail.com","port":"465","name":"matthew@nickhaze.demon.co.uk","dname":"Email my demon address","x":794,"y":337,"z":"7a69b8ae.02f248","wires":[]},{"id":"64723f81.d870a","type":"function","name":"Ignore retained message","func":"if (msg.retain) {\n    msg = null;\n} else {\n    if (msg.payload == \"1\") {\n        msg.payload = \"Everyone has left the house.\";\n        msg.topic = \"House now empty\";\n    } else if (msg.payload == \"0\") {\n        msg.payload = \"Someone's back in the house.\";\n        msg.topic = \"House no longer empty\";\n    }\n}\nreturn msg;","outputs":1,"valid":true,"x":533,"y":337,"z":"7a69b8ae.02f248","wires":[["e16bd6df.e8436"]]}]